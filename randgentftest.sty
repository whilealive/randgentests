% ==================================================================
% FILE     randgentftest.sty
% INFO     
%
% DATE     22.07.2022
% OWNER    Bischofberger
% ==================================================================
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.

\ProvidesExplPackage {randgentftest} {2022-07-19} {0.1}
  {Create randomly generated true/false tests.}


% define checklist environment
\tl_new:N  \l__randgentftest_checkbox_tl
\tl_set:Nn \l__randgentftest_checkbox_tl { \ensuremath { \square } }

\tl_new:N  \l__randgentftest_checkedbox_tl
\tl_set:Nn \l__randgentftest_checkedbox_tl {
  \mbox { \makebox [ 0pt ] [ l ] { \raisebox { 0.22ex } { \ensuremath { \times } } } \ensuremath { \square } } }

% checkbox alternative using tikz (not relying on fonts): 
\NewDocumentCommand \drawTikZcheckboxes { } {
  \RequirePackage { tikz }
  \newlength { \TikZcheckboxsize }
  \AtBeginDocument { \settoheight { \TikZcheckboxsize } { A } }
  \tl_set:Nn \l__randgentftest_checkbox_tl {
    \tikz \draw (0,0) rectangle (\TikZcheckboxsize,\TikZcheckboxsize); }
  \tl_set:Nn \l__randgentftest_checkedbox_tl
  {
    \begin{tikzpicture}
      \draw (0,0) rectangle (\TikZcheckboxsize,\TikZcheckboxsize);
      \draw (0,0) -- (\TikZcheckboxsize,\TikZcheckboxsize);
      \draw (\TikZcheckboxsize,0) -- (0,\TikZcheckboxsize);
    \end{tikzpicture}
  }
}

% Using expl3 directly within randgentftest.lua is problematic - it breaks file paths with spaces etc. So here we export the variable in a traditional LaTeX2e form.
\cs_new:Npn \getCheckedbox { \tl_use:N \l__randgentftest_checkedbox_tl }

\RequirePackage { enumitem }
\newlist { checklist } { itemize } { 2 }
\setlist [ checklist,1,2 ] {
  label = \tl_use:N \l__randgentftest_checkbox_tl,
  left = 0pt .. 1.6em,
  nosep,
  align = left,
  itemsep = 4ex
}


% define parent folder here
\newcommand*{\Collectionfolder}{Aussagesammlung}


% define subfolders here
% set default: all folders
% use renewcommand to delete entries from list
\newcommand*{\Topicfolders}
{%
  01-Algebra,
  02-Potenzrechnen,
  03-Lineare-Gleichungen,
  04-Lineare-Gleichungssysteme,
  05-Quadratische-Gleichungen,
  06-Nichtlineare-Gleichungen,
  07-Lineare-Funktionen,
  08-Quadratische-Funktionen,
  09-Potenzfunktionen,
  10-Polynomfunktionen,
  11-Exponentialfunktionen,
  12-Datenanalyse,
  13-Wahrscheinlichkeitsrechnen,
  14-Planimetrie-I,
  15-Planimetrie-II,
  16-Trigonometrie-I,
  17-Trigonometrie-II,
  18-Stereometrie,
  19-Vektorgeometrie,
  20-Privat,
}%


% shortcut for TALS GLF content
\newcommand*{\TALSGLF}
{%
  \renewcommand*{\Topicfolders}
  {%
    01-Algebra,
    03-Lineare-Gleichungen,
    04-Lineare-Gleichungssysteme,
    05-Quadratische-Gleichungen,
    07-Lineare-Funktionen,
    08-Quadratische-Funktionen,
    12-Datenanalyse,
    14-Planimetrie-I,
    15-Planimetrie-II,
    16-Trigonometrie-I,
    17-Trigonometrie-II,
  }%
}

% shortcut for TALS SPF content
\newcommand*{\TALSSPF}
{%
  \renewcommand*{\Topicfolders}
  {%
    02-Potenzrechnen,
    06-Nichtlineare-Gleichungen,
    09-Potenzfunktionen,
    10-Polynomfunktionen,
    11-Exponentialfunktionen,
    18-Stereometrie,
    19-Vektorgeometrie,
  }%
}


\newcommand*{\tFolder}{01-wahr}
\newcommand*{\fFolder}{02-falsch}


\newcommand*{\Filterlist}{}


\keys_define:nn{randgentftest/print}
{%
  solutions .bool_set:N = \l__print_solutions_bool,
  solutions .value_required:n = true,
  solutions .initial:n = { true },
  solutions .default:n = { true },

  filepaths .bool_set:N = \l__print_filepaths_bool,
  filepaths .value_required:n = true,
  filepaths .initial:n = { false },
  filepaths .default:n = { true },
}%

% args: #1: options (optional), #2: number of true statements, #3: number of false statements
% options:  solutions=false  (default: true)
%           printpaths=true  (default: false)
\NewDocumentCommand{\CreateStatementTest}{ o m m }
{%
  \IfNoValueF{#1}{\keys_set:nn{randgentftest/print}{#1}}
  \directlua{%
    require('randgentftest.lua')
    \bool_if:NTF{\l__print_solutions_bool}
    {%
      \bool_if:NTF{\l__print_filepaths_bool}
      {%
        createRandGenTest('\Collectionfolder', '\Topicfolders', '\tFolder', '\fFolder', #2, #3, '\Filterlist', true, true)
      }%
      {%
        createRandGenTest('\Collectionfolder', '\Topicfolders', '\tFolder', '\fFolder', #2, #3, '\Filterlist', true, false)
      }%
    }%
    {%  no solutions
      createRandGenTest('\Collectionfolder', '\Topicfolders', '\tFolder', '\fFolder', #2, #3, '\Filterlist')
    }%
  }%
}%

% args: #1: options (optional)
% options:  printpaths=true  (default: false)
\NewDocumentCommand{\PrintEntireLibrary}{ o }
{%
  \IfNoValueF{#1}{\keys_set:nn{randgentftest/print}{#1}}
  \directlua{%
    require('randgentftest.lua')
    \bool_if:NTF{\l__print_filepaths_bool}
    {%
      printAll('\Collectionfolder', '\Filterlist', true)
    }%
    {%
      printAll('\Collectionfolder', '\Filterlist', false)
    }%
  }%
}%


